nextflow_workflow {

    name "Test Subworkflow FASTA_SEQKIT_REFSORT"
    script "../main.nf"
    config "./nextflow.config"
    workflow "FASTA_SEQKIT_REFSORT"

    tag "subworkflows"
    tag "subworkflows_gallvp"
    tag "subworkflows/fasta_seqkit_refsort"

    tag "juiceboxscripts/makeagpfromfasta"
    tag "seqkit/sort"
    tag "haphic/refsort"
    tag "minimap2/align"
    tag "gunzip"
    tag "custom/interleavefasta"

    setup {
        run("GUNZIP") {
            script "../../../../modules/gallvp/gunzip/main.nf"
            process {
                """
                input[0] = Channel.of(
                    [
                        [ id: 'query' ],
                        file('https://github.com/Plant-Food-Research-Open/assemblyqc/raw/4f9fba392cf7212d61c6245fd72339e09164ce44/tests/hic/testdata/HYh1h2_Chr01_6000000_6015000.fasta.gz')
                    ],
                    [
                        [ id: 'ref' ],
                        file(params.modules_testdata_base_path + 'genomics/eukaryotes/actinidia_chinensis/genome/chr1/genome.fasta.gz', checkIfExists: true)
                    ],
                )
                """
            }
        }
    }

    test("HY - actinidia_chinensis - fasta") {

        when {
            workflow {
                """
                input[0] = GUNZIP.out.gunzip
                input[1] = null
                input[2] = true
                input[3] = true
                """
            }
        }

        then {
            assertAll(
                { assert workflow.success},
                { assert snapshot(workflow.out).match()}
            )
        }
    }


    test("HY - actinidia_chinensis - fasta - combinations") {

        when {
            workflow {
                """
                input[0] = GUNZIP.out.gunzip
                input[1] = "query query:ref ref"
                input[2] = true
                input[3] = true
                """
            }
        }

        then {
            assertAll(
                { assert workflow.success},
                { assert snapshot(workflow.out).match()}
            )
        }
    }

    test("HY - actinidia_chinensis - fasta - no - sort - combinations") {

        when {
            workflow {
                """
                input[0] = GUNZIP.out.gunzip
                input[1] = "query query:ref ref"
                input[2] = false
                input[3] = false
                """
            }
        }

        then {
            assertAll(
                { assert workflow.success},
                { assert snapshot(workflow.out).match()}
            )
        }
    }
}