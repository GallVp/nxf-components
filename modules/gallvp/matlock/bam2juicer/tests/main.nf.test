nextflow_process {

    name "Test Process MATLOCK_BAM2JUICER"
    script "../main.nf"
    config "./nextflow.config"
    process "MATLOCK_BAM2JUICER"

    tag "modules"
    tag "modules_gallvp"
    tag "matlock"
    tag "matlock/bam2juicer"

    test("hongyang - hic - bam - filter") {

        when {
            params {
                filter_args = '-F 3852'
            }
            process {
                """
                input[0] = [
                    [ id:'test' ], // meta map
                    file('https://github.com/Plant-Food-Research-Open/assemblyqc/raw/eef371b57bda38fb0ff8167f7a547325c8211c3f/tests/hic/testdata/HYh1h2_Chr01_6000000_6015000.bam', checkIfExists: true),
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("hongyang - hic - bam - stub") {

        options '-stub'

        when {
            params {
                filter_args = ''
            }
            process {
                """
                input[0] = [
                    [ id:'test' ], // meta map
                    file('https://github.com/Plant-Food-Research-Open/assemblyqc/raw/eef371b57bda38fb0ff8167f7a547325c8211c3f/tests/hic/testdata/HYh1h2_Chr01_6000000_6015000.bam', checkIfExists: true),
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("hongyang - hic - bam - filter - stub") {
        options '-stub'

        when {
            params {
                filter_args = '-F 3852'
            }
            process {
                """
                input[0] = [
                    [ id:'test' ], // meta map
                    file('https://github.com/Plant-Food-Research-Open/assemblyqc/raw/eef371b57bda38fb0ff8167f7a547325c8211c3f/tests/hic/testdata/HYh1h2_Chr01_6000000_6015000.bam', checkIfExists: true),
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}
