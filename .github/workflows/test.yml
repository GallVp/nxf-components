name: Run tests
on:
  pull_request:
    branches: [main]

# Cancel if a newer run is started
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  NXF_SINGULARITY_CACHEDIR: ${{ github.workspace }}/.singularity
  NXF_SINGULARITY_LIBRARYDIR: ${{ github.workspace }}/.singularity
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5.0.0
      - uses: actions/setup-python@v6.0.0
      - uses: pre-commit/action@v3.0.1
        with:
          extra_args: ""

  nf-test-changes:
    name: nf-test-changes
    runs-on: ubuntu-latest
    outputs:
      # Expose detected tags as 'modules' and 'workflows' output variables
      paths: ${{ steps.list.outputs.components }}
      modules: ${{ steps.outputs.outputs.modules }}
      subworkflows: ${{ steps.outputs.outputs.subworkflows}}
      # Prod for version bumping

    steps:
      - uses: actions/checkout@v5.0.0
        with:
          fetch-depth: 0

      - name: List nf-test files
        id: list
        uses: adamrtalbot/detect-nf-test-changes@v0.0.6
        with:
          head: ${{ github.sha }}
          base: ${{ github.event.pull_request.base.sha }}
          n_parents: 2
          ignored: "nf-core-modules/**"
          exclude_tags: "modules_nfcore"

      - name: Separate modules and subworkflows
        id: outputs
        run: |
          echo modules=$(echo '${{ steps.list.outputs.components }}' | jq -c '. | map(select(contains("modules/gallvp/"))) | map(gsub("modules/gallvp/"; ""))') >> $GITHUB_OUTPUT
          echo subworkflows=$(echo '${{ steps.list.outputs.components }}' | jq '. | map(select(contains("subworkflows/gallvp/"))) | map(gsub("subworkflows/gallvp/"; ""))') >> $GITHUB_OUTPUT

      - name: debug
        run: |
          echo ${{ steps.list.outputs.components }}
          echo ${{ steps.outputs.outputs.modules }}
          echo ${{ steps.outputs.outputs.subworkflows }}

  nf-core-lint-modules:
    runs-on: ubuntu-latest
    name: nf-core-lint-modules
    needs: [nf-test-changes]
    if: ${{ needs.nf-test-changes.outputs.modules != '[]' }}
    strategy:
      fail-fast: false
      matrix:
        tags: ["${{ fromJson(needs.nf-test-changes.outputs.modules) }}"]
    steps:
      - uses: actions/checkout@v5.0.0

      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version: "3.11"

      - uses: actions/cache@v4.3.0
        id: cache-pip
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip
          restore-keys: |
            ${{ runner.os }}-pip

      - name: Install pip
        run: python -m pip install --upgrade pip

      - name: Setup Nextflow
        uses: nf-core/setup-nextflow@v2

      - name: Install nf-core tools development version
        run: python -m pip install --upgrade --force-reinstall git+https://github.com/nf-core/tools.git@dev

      - name: Lint module ${{ matrix.tags }}
        run: nf-core -v modules -g https://github.com/GallVp/nxf-components.git lint ${{ matrix.tags }}

  nf-core-lint-subworkflows:
    runs-on: ubuntu-latest
    name: nf-core-lint-modules
    needs: [nf-test-changes]
    if: ${{ needs.nf-test-changes.outputs.subworkflows != '[]' }}
    strategy:
      fail-fast: false
      matrix:
        tags: ["${{ fromJson(needs.nf-test-changes.outputs.subworkflows) }}"]
    steps:
      - uses: actions/checkout@v5.0.0

      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version: "3.11"

      - name: Install pip
        run: python -m pip install --upgrade pip

      - name: Setup Nextflow
        uses: nf-core/setup-nextflow@v2

      - name: Install nf-core tools development version
        run: python -m pip install --upgrade --force-reinstall git+https://github.com/nf-core/tools.git@dev

      - name: Lint module ${{ matrix.tags }}
        run: nf-core subworkflows lint ${{ matrix.tags }}

  nf-test:
    runs-on: ubuntu-latest
    name: nf-test
    needs: [nf-test-changes]
    if: ( needs.nf-test-changes.outputs.paths != '[]' )
    strategy:
      fail-fast: false
      matrix:
        path: ["${{ fromJson(needs.nf-test-changes.outputs.paths) }}"]
        profile: [conda, docker, singularity]
        exclude:
          - profile: conda
            path: modules/gallvp/haphic/refsort
          - profile: conda
            path: modules/gallvp/braker3
          - profile: conda
            path: modules/gallvp/edta/edta
          - profile: conda
            path: subworkflows/gallvp/fasta_edta_lai
          - profile: conda
            path: modules/gallvp/eggnogmapper
          - profile: conda
            path: modules/gallvp/ltrretriever/ltrretriever
          - profile: conda
            path: modules/gallvp/tesorter
          - profile: conda
            path: modules/gallvp/hicqc
          - profile: conda
            path: modules/gallvp/winnowmap
          - profile: conda
            path: modules/gallvp/t2tpolish/paftocovclippedwig
          - profile: conda
            path: subworkflows/gallvp/fasta_fastq_winnowmap_coverage
    env:
      NXF_ANSI_LOG: false
      NF_TEST_VER: "0.9.2"

    steps:
      - uses: actions/checkout@v5.0.0

      - name: Setup Nextflow
        uses: nf-core/setup-nextflow@v2

      - name: Install nf-test
        uses: nf-core/setup-nf-test@v1.3.6
        with:
          version: ${{ env.NF_TEST_VER }}

      - name: Setup apptainer
        if: matrix.profile == 'singularity'
        uses: eWaterCycle/setup-apptainer@3f706d898c9db585b1d741b4692e66755f3a1b40 # Changes after v2.0.0

      - name: Set up Singularity
        if: matrix.profile == 'singularity'
        run: |
          mkdir -p $NXF_SINGULARITY_CACHEDIR
          mkdir -p $NXF_SINGULARITY_LIBRARYDIR

      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version: "3.11"

      - uses: actions/cache@v4.3.0
        id: cache-pip-pdiff
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-pdiff
          restore-keys: |
            ${{ runner.os }}-pip-pdiff

      - name: Install Python dependencies
        run: python -m pip install --upgrade pip pdiff cryptography

      - name: Set up miniconda
        if: matrix.profile == 'conda'
        uses: conda-incubator/setup-miniconda@v3.2.0
        with:
          miniconda-version: "latest"
          auto-update-conda: true
          channels: conda-forge,bioconda,defaults

      - name: Conda setup
        if: matrix.profile == 'conda'
        run: |
          conda clean -a
          conda install -n base conda-libmamba-solver
          conda config --set solver libmamba
          echo $(realpath $CONDA)/condabin >> $GITHUB_PATH
          echo $(realpath python) >> $GITHUB_PATH

      # Test the module
      - name: Run nf-test
        env:
          NFT_DIFF: "pdiff"
          NFT_DIFF_ARGS: "--line-numbers --width 120 --expand-tabs=2"
        run: |
          PROFILE=${{ matrix.profile }}
          NFT_WORKDIR=~ \
          nf-test test \
            --profile=${{ matrix.profile }} \
            --tap=test.tap \
            --verbose \
            ${{ matrix.path }}

      - uses: pcolby/tap-summary@v1.2.0
        with:
          path: >-
            test.tap

      - name: Clean up
        if: always()
        run: |
          sudo rm -rf /home/ubuntu/tests/

  confirm-pass:
    runs-on: ubuntu-latest
    needs: [pre-commit, nf-core-lint-modules, nf-core-lint-subworkflows, nf-test-changes, nf-test]
    if: always()
    steps:
      - name: All tests ok
        if: ${{ success() || !contains(needs.*.result, 'failure') }}
        run: exit 0
      - name: One or more tests failed
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1

      - name: debug-print
        if: always()
        run: |
          echo "toJSON(needs) = ${{ toJSON(needs) }}"
          echo "toJSON(needs.*.result) = ${{ toJSON(needs.*.result) }}"
